- hosts:
  - k8s-master
  tasks:
    - name: "Configura hostname k8s-master"
      shell: hostname k8s-master && echo "k8s-master" > /etc/hostname
      become: yes
# ---
- hosts:
  - k8s-node-1
  tasks:
    - name: "Configura hostname k8s-node-1"
      shell: hostname k8s-node-1 && echo "k8s-node-1" > /etc/hostname
      become: yes
# ---
- hosts:
  - k8s-node-2
  tasks:
    - name: "Configura hostname k8s-node-2"
      shell: hostname k8s-node-2 && echo "k8s-node-2" > /etc/hostname
      become: yes
# ---
- hosts:
  - k8s-node-3
  tasks:
    - name: "Configura hostname k8s-node-3"
      shell: hostname k8s-node-3 && echo "k8s-node-3" > /etc/hostname
      become: yes
# ---
# install link: https://phoenixnap.com/kb/install-kubernetes-on-ubuntu
- hosts: all
  become: true
  tasks:
    - name: apt-get update
      shell: apt-get update

    - name: apt-get install docker.io -y
      shell: apt-get install docker.io -y

    - name: systemctl start docker
      shell: systemctl start docker

    - name: Kubernetes Signing Key
      shell: curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add

    - name: apt-get install curl 
      shell: apt-get install curl -y

    - name: Add Software Repositories
      shell: apt-add-repository "deb http://apt.kubernetes.io/ kubernetes-xenial main"

    - name: apt-get install kubeadm
      shell: apt-get install kubeadm -y
    
    - name: apt-get install kubeadm
      shell: apt-get install kubelet -y
    
    - name: apt-get install kubeadm
      shell: apt-get install kubectl -y

    - name: apt-get install kubeadm
      ignore_errors: yes
      shell: swapoff –a

# ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook -i hosts provisionar.yml -u ubuntu --private-key ~/Desktop/desafio_devops/chaves_desafio_kubernetes/id_rsa

# === no servidor control-plane ===
# kubeadm init --apiserver-advertise-address $(hostname -i | awk '{print $1;exit}')

# mkdir -p $HOME/.kube
# sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
# sudo chown $(id -u):$(id -g) $HOME/.kube/config

# vim ~/.bashrc # colocar os sources abaixo
# export KUBECONFIG=/etc/kubernetes/admin.conf
# source <(kubectl completion bash) # para deixar o kubeclt com auto complete

# kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
# kubectl get pods -n kube-system

# Correção na AWS BUG
# - https://github.com/rancher/rancher/issues/6139
# kubectl rollout restart deployment coredns -n kube-system

# recuperar join
# kubeadm token create --print-join-command
