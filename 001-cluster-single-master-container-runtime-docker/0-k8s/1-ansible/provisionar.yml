- hosts:
  - k8s-master
  tasks:
    - name: "Configura hostname k8s-master"
      shell: hostname k8s-master && echo "k8s-master" > /etc/hostname
      become: yes
# ---
- hosts:
  - k8s-node-1
  tasks:
    - name: "Configura hostname k8s-node-1"
      shell: hostname k8s-node-1 && echo "k8s-node-1" > /etc/hostname
      become: yes
# ---
- hosts:
  - k8s-node-2
  tasks:
    - name: "Configura hostname k8s-node-2"
      shell: hostname k8s-node-2 && echo "k8s-node-2" > /etc/hostname
      become: yes
# ---
- hosts:
  - k8s-node-3
  tasks:
    - name: "Configura hostname k8s-node-3"
      shell: hostname k8s-node-3 && echo "k8s-node-3" > /etc/hostname
      become: yes
# ---
- hosts: all
  tasks:
    # doc https://phoenixnap.com/kb/install-kubernetes-on-ubuntu

    - name: install packages required by docker
      become: true
      apt:
        update_cache: yes
        state: latest
        name:
        - apt-transport-https
        - ca-certificates
        - curl
        - gpg-agent
        - software-properties-common

    - name: add docker GPG key
      become: true
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: add docker apt repo
      become: true
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: install docker
      become: true
      apt:
        update_cache: yes
        state: latest
        name:
        - docker-ce
        - docker-ce-cli

    - name: "Configurando docker runtime"
      shell: mkdir -p /etc/systemd/system/docker.service.d
      become: yes

    - name: "Corrigindo docker para o kubernetes"
      copy:
        src: "docker/daemon.json"
        dest: "/etc/docker/daemon.json"
      become: yes

    - name: "Restart docker"
      shell: systemctl daemon-reload && systemctl restart docker
      become: yes

    - name: Remove swapfile from /etc/fstab
      mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
        - swap
        - none

    - name: Disable swap
      command: swapoff -a
      when: ansible_swaptotal_mb > 0

    - name: Add an apt signing key for Kubernetes
      become: true
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: "Configurando docker runtime"
      shell: modprobe overlay && modprobe br_netfilter
      become: yes

    - name: "Corrigindo docker para o kubernetes"
      copy:
        src: "kubernetes.conf"
        dest: "/etc/sysctl.d/kubernetes.conf"
      become: yes

    - name: "Configurando docker runtime"
      shell: sudo sysctl --system
      become: yes

    - name: Adding apt repository for Kubernetes
      become: true
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes.list

    - name: Install Kubernetes binaries
      become: true
      apt: 
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - kubelet 
          - kubeadm 
          - kubectl

    - name: Restart kubelet
      become: true
      service:
        name: kubelet
        daemon_reload: yes
        state: restarted

    - name: "Configurando docker runtime"
      shell: VER=$(curl -s https://api.github.com/repos/Mirantis/cri-dockerd/releases/latest|grep tag_name | cut -d '"' -f 4|sed 's/v//g') && wget https://github.com/Mirantis/cri-dockerd/releases/download/v${VER}/cri-dockerd-${VER}.amd64.tgz && tar xvf cri-dockerd-${VER}.amd64.tgz && sudo mv cri-dockerd/cri-dockerd /usr/local/bin/
      become: yes

    - name: "Configurando docker runtime"
      shell: wget https://raw.githubusercontent.com/Mirantis/cri-dockerd/master/packaging/systemd/cri-docker.service
      become: yes

    - name: "Configurando docker runtime"
      shell: wget https://raw.githubusercontent.com/Mirantis/cri-dockerd/master/packaging/systemd/cri-docker.socket
      become: yes

    - name: "Configurando docker runtime"
      shell: sudo mv cri-docker.socket cri-docker.service /etc/systemd/system/
      become: yes

    - name: "Configurando docker runtime"
      shell: sudo sed -i -e 's,/usr/bin/cri-dockerd,/usr/local/bin/cri-dockerd,' /etc/systemd/system/cri-docker.service
      become: yes
    
    - name: "Configurando docker runtime"
      shell: sudo sed -i -e 's,/usr/bin/cri-dockerd,/usr/local/bin/cri-dockerd,' /etc/systemd/system/cri-docker.service
      become: yes
    
    - name: "Configurando docker runtime"
      shell: sudo systemctl daemon-reload && systemctl enable cri-docker.service && systemctl enable --now cri-docker.socket
      become: yes

    # - name: "Configurando docker runtime"
    #   shell: sudo kubeadm config images pull --cri-socket /run/cri-dockerd.sock
    #   become: yes

# ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook -i hosts provisionar.yml -u ubuntu --private-key ~/Desktop/desafio_devops/chaves_desafio_kubernetes/id_rsa

