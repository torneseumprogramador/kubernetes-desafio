- hosts:
  - ec2-k8s-proxy
  handlers:
    - name: "restart haproxy"
      service:
        name: haproxy
        state: restarted
      become: yes

  tasks:
    - name: "Configura hostname haproxy"
      shell: hostname k8s-proxy && echo "k8s-proxy" > /etc/hostname
      become: yes
    
    - name: "Roda: sudo apt-get update"
      become: yes
      apt:
        upgrade: yes
        update_cache: yes
        cache_valid_time: 86400 #Um dia

    - name: "Instala pacotes"
      apt:
        name: "{{ item }}"
        state: latest
      become: yes # roda com sudo
      with_items:
        - haproxy

    - name: "Trocando haproxy"
      copy:
        src: "haproxy/haproxy.cfg"
        dest: "/etc/haproxy/haproxy.cfg"
      become: yes
      notify:
        - "restart haproxy"
# ---
- hosts:
  - ec2-k8s-m1
  tasks:
    - name: "Configura hostname k8s-master"
      shell: hostname k8s-master-1 && echo "k8s-master-1" > /etc/hostname
      become: yes
# ---
- hosts:
  - ec2-k8s-m2
  tasks:
    - name: "Configura hostname k8s-master"
      shell: hostname k8s-master-2 && echo "k8s-master-2" > /etc/hostname
      become: yes
# ---
- hosts:
  - ec2-k8s-m3
  tasks:
    - name: "Configura hostname k8s-master"
      shell: hostname k8s-master-3 && echo "k8s-master-3" > /etc/hostname
      become: yes
# ---
- hosts:
  - ec2-k8s-w1
  tasks:
    - name: "Configura hostname k8s-workers"
      shell: hostname k8s-workers-1 && echo "k8s-workers-1" > /etc/hostname
      become: yes
# ---
- hosts:
  - ec2-k8s-w2
  tasks:
    - name: "Configura hostname k8s-workers"
      shell: hostname k8s-workers-2 && echo "k8s-workers-2" > /etc/hostname
      become: yes
# ---
- hosts:
  - ec2-k8s-w3
  tasks:
    - name: "Configura hostname k8s-workers"
      shell: hostname k8s-workers-3 && echo "k8s-workers-3" > /etc/hostname
      become: yes
# ---
# install link: https://phoenixnap.com/kb/install-kubernetes-on-ubuntu
- hosts:
  - ec2-k8s-m1
  - ec2-k8s-m2
  - ec2-k8s-m3
  - ec2-k8s-w1
  - ec2-k8s-w2
  - ec2-k8s-w3

  become: true
  tasks:
    - name: apt-get update
      shell: apt-get update

    - name: apt-get install docker.io -y
      shell: apt-get install docker.io -y

    - name: systemctl start docker
      shell: systemctl start docker

    - name: Kubernetes Signing Key
      shell: curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add

    - name: apt-get install curl 
      shell: apt-get install curl -y

    - name: Add Software Repositories
      shell: apt-add-repository "deb http://apt.kubernetes.io/ kubernetes-xenial main"

    - name: apt-get install kubeadm
      shell: apt-get install kubeadm -y
    
    - name: apt-get install kubeadm
      shell: apt-get install kubelet -y
    
    - name: apt-get install kubeadm
      shell: apt-get install kubectl -y

    - name: apt-get install kubeadm
      ignore_errors: yes
      shell: swapoff â€“a

    - name: "Host para o haproxy"
      copy:
        src: "host/hosts"
        dest: "/etc/hosts"
      become: yes
# ---
- hosts:
  - ec2-k8s-m1
  become: yes
  tasks:    
    - name: "Reset cluster"
      shell: "kubeadm reset -f"

    - shell: "kubeadm init --control-plane-endpoint 'k8s-haproxy:6443' --upload-certs"
      register: ps
    - debug:
        msg: " '{{ ps.stdout_lines }}' "

    - name: "Colocando no path da maquina o conf do kubernetes"
      shell: "mkdir -p $HOME/.kube && sudo cp -f /etc/kubernetes/admin.conf $HOME/.kube/config && sudo chown $(id -u):$(id -g) $HOME/.kube/config && export KUBECONFIG=/etc/kubernetes/admin.conf"

  
  

# # ansible-playbook -i hosts provisionar.yml -u ubuntu --private-key ~/Desktop/devops/Treinamento
# # ssh -i ~/Desktop/devops/Treinamento ubuntu@ec2-54-174-235-197.compute-1.amazonaws.com
# # ssh -i ~/Desktop/devops/Treinamento ubuntu@ec2-50-16-162-135.compute-1.amazonaws.com
# # ssh -i ~/Desktop/devops/Treinamento ubuntu@ec2-54-173-115-181.compute-1.amazonaws.com

# # *** verifica log error
# # vim /etc/haproxy/haproxy.cfg
# # systemctl restart haproxy
# # systemctl status haproxy.service
# # tail -f /var/log/haproxy.log

# # tail -f /var/log/nginx/error.log

# ansible-playbook -i hosts provisionar.yml -u ubuntu --private-key ~/Desktop/devops/Treinamento
# ssh -i ~/Desktop/devops/Treinamento ubuntu@ec2-54-152-41-46.compute-1.amazonaws.com
# systemctl status haproxy | less

